<?php
/**
 * OpportunityApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  BurgerDigital\BlackbaudPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Opportunity
 *
 * This API manages opportunity information and related entities such as opportunity fundraisers, opportunity attachments, and opportunity custom fields.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace BurgerDigital\BlackbaudPhpSdk\Test\Api;

use \BurgerDigital\BlackbaudPhpSdk\Configuration;
use \BurgerDigital\BlackbaudPhpSdk\ApiException;
use \BurgerDigital\BlackbaudPhpSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OpportunityApiTest Class Doc Comment
 *
 * @category Class
 * @package  BurgerDigital\BlackbaudPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OpportunityApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createDocument
     *
     * Document (Create).
     *
     */
    public function testCreateDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOpportunity
     *
     * Opportunity (Create).
     *
     */
    public function testCreateOpportunity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOpportunityAttachment
     *
     * Opportunity attachment (Create).
     *
     */
    public function testCreateOpportunityAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOpportunityCustomField
     *
     * Opportunity custom field (Create).
     *
     */
    public function testCreateOpportunityCustomField()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOpportunityAttachment
     *
     * Opportunity attachment (Delete).
     *
     */
    public function testDeleteOpportunityAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOpportunityCustomField
     *
     * Opportunity custom field (Delete).
     *
     */
    public function testDeleteOpportunityCustomField()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for editOpportunity
     *
     * Opportunity (Edit).
     *
     */
    public function testEditOpportunity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for editOpportunityAttachment
     *
     * Opportunity attachment (Edit).
     *
     */
    public function testEditOpportunityAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for editOpportunityCustomField
     *
     * Opportunity custom field (Edit).
     *
     */
    public function testEditOpportunityCustomField()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOpportunity
     *
     * Opportunity (Get).
     *
     */
    public function testGetOpportunity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAttachmentTags
     *
     * Attachment tags.
     *
     */
    public function testListAttachmentTags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOpportunities
     *
     * Opportunity list.
     *
     */
    public function testListOpportunities()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOpportunityAttachmentsSingleOpportunity
     *
     * Opportunity attachment list (Single opportunity).
     *
     */
    public function testListOpportunityAttachmentsSingleOpportunity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOpportunityCustomFieldCategories
     *
     * Opportunity custom field categories.
     *
     */
    public function testListOpportunityCustomFieldCategories()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOpportunityCustomFieldCategoryValues
     *
     * Opportunity custom field category values.
     *
     */
    public function testListOpportunityCustomFieldCategoryValues()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOpportunityCustomFieldsSingleOpportunity
     *
     * Opportunity custom field list (Single opportunity).
     *
     */
    public function testListOpportunityCustomFieldsSingleOpportunity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOpportunityPurposes
     *
     * Opportunity purposes.
     *
     */
    public function testListOpportunityPurposes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOpportunityStatuses
     *
     * Opportunity statuses.
     *
     */
    public function testListOpportunityStatuses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}

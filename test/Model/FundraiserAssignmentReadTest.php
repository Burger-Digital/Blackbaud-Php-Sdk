<?php
/**
 * FundraiserAssignmentReadTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  BurgerDigital\BlackbaudPhpSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Constituent
 *
 * This API manages constituent information and related entities such as addresses, phones, emails, and notes.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.24
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace BurgerDigital\BlackbaudPhpSdk;

/**
 * FundraiserAssignmentReadTest Class Doc Comment
 *
 * @category    Class
 * @description Fundraiser constituents interact with other constituents on behalf of your organization to cultivate relationships and request donations. Fundraiser assignments allow you to assign specific constituents to fundraisers for solicitation purposes
 * @package     BurgerDigital\BlackbaudPhpSdk
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FundraiserAssignmentReadTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "FundraiserAssignmentRead"
     */
    public function testFundraiserAssignmentRead()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "amount"
     */
    public function testPropertyAmount()
    {
    }

    /**
     * Test attribute "appeal_id"
     */
    public function testPropertyAppealId()
    {
    }

    /**
     * Test attribute "campaign_id"
     */
    public function testPropertyCampaignId()
    {
    }

    /**
     * Test attribute "constituent_id"
     */
    public function testPropertyConstituentId()
    {
    }

    /**
     * Test attribute "end"
     */
    public function testPropertyEnd()
    {
    }

    /**
     * Test attribute "fund_id"
     */
    public function testPropertyFundId()
    {
    }

    /**
     * Test attribute "fundraiser_id"
     */
    public function testPropertyFundraiserId()
    {
    }

    /**
     * Test attribute "start"
     */
    public function testPropertyStart()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }
}
